name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch: # Allows manual triggering of the workflow
    inputs:
      environment:
        description: 'Select environment (dev or qa)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
      browser:
        description: 'Select browser (chrome or firefox)'
        required: true
        default: 'chrome'
        type: choice
        options:
          - chrome
          - firefox
env:
  DEFAULT_ENV: dev
  DEFAULT_BROWSER: chrome

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Spotless Check # code formatter
        run: ./gradlew spotlessCheck

      - name: Run PMD
        run: ./gradlew pmdMain pmdTest

      - name: Upload PMD report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pmd-report
          path: build/reports/pmd/

      - name: Upload PMD report
        if: always()
        uses: actions/upload-pages-artifact@v1
        with:
          path: build/reports/pmd/
          retention-days: 7

      - name: Run smoke tests
        run: ./gradlew customTest -PsuiteType=smoke -Denv=${{ github.event.inputs.environment || env.DEFAULT_ENV }} -Dbrowser=${{ github.event.inputs.browser || env.DEFAULT_BROWSER  }}

      - name: Upload smoke test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: build/reports/tests/customTest

      - name: Clean build directory
        run: ./gradlew cleanBuildDir

      - name: Run regression tests
        run: ./gradlew customTest -PsuiteType=regression -Denv=${{ github.event.inputs.environment || env.DEFAULT_ENV }} -Dbrowser=${{ github.event.inputs.browser || env.DEFAULT_BROWSER  }}

      - name: Upload regression test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: regression-test-results
          path: build/reports/tests/customTest

      - name: Install github-actions-ctrf
        run: npm install -g github-actions-ctrf

      - name: Run CTRF annotations
        run: npx junit-to-ctrf test-results/customTest/*.xml -o ctrf/ctrf-report.json
        if: always()

      - name: Publish Test Summary Results
        run: npx github-actions-ctrf ctrf/ctrf-report.json

      - name: Deploy to GitHub Pages
        run: ctrf deploy --source build/reports/pmd/ --token ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2